{"version":3,"file":"background.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA;WACA,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;;;;;;;ACNwB;AACF;AACF;AACc;AAClC;AAUkB;AAClB;AACA,QAAQ,QAAQ,EAAE,mBAAO,CAAC,oCAAe;AACzC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6DAA6D,aAAa;AAC1E,MAAM;AACN,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B,KAAK;AACpC,wBAAwB,KAAK;AAC7B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA,QAAQ,gDAAS;AACjB;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,mDAAa;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB,gDAAS;AAC9B;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,KAAK;AACL;AACA;AACA;AACA,qCAAqC,KAAK;AAC1C;AACA;AACA,MAAM;AACN,qBAAqB,MAAM;AAC3B;AACA;AACA;AACA,uBAAuB,iDAAU;AACjC,kBAAkB,gDAAS;AAC3B;AACA;AACA,KAAK;AACL;AACA,IAAI,yCAAG;AACP;AACA;AACA;AACA,YAAY,yCAAG;AACf;AACA,KAAK;AACL;AACA,eAAe,0CAAI;AACnB,wBAAwB,0CAAI;AAC5B;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA,gBAAgB,yCAAG;AACnB;AACA;AACA;AACA,gBAAgB,yCAAG;AACnB,aAAa;AACb,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,6CAAO;AACX;AACA;AACA;AACA;AACA,YAAY,oDAAW;AACvB,YAAY,yCAAG,mBAAmB,yCAAG;AACrC;AACA;AACA;AACA,gBAAgB,kDAAY;AAC5B;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,KAAK;AACL;AACA,IAAI,6CAAO;AACX;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,yCAAG;AACH;AACA,gBAAgB,kDAAW;AAC3B;AACA;AACA,uBAAuB,yCAAG;AAC1B;AACA;AACA,QAAQ,yCAAG;AACX,MAAM;AACN;AACA,QAAQ,yCAAG;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,QAAQ,yCAAG;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA,yBAAyB,MAAM;AAC/B,YAAY,yCAAG;AACf,SAAS;AACT;AACA,EAAE;AACF,IAAI,yCAAG;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,qBAAqB,MAAM;AAC3B,QAAQ,yCAAG;AACX,KAAK;AACL;AACA,IAAI,yCAAG;AACP;AACA,YAAY,yCAAG;AACf;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA","sources":["webpack://rpgjs-electron/external commonjs \"electron\"","webpack://rpgjs-electron/external commonjs \"terminate\"","webpack://rpgjs-electron/external commonjs \"url\"","webpack://rpgjs-electron/external node-commonjs \"child_process\"","webpack://rpgjs-electron/external node-commonjs \"os\"","webpack://rpgjs-electron/external node-commonjs \"path\"","webpack://rpgjs-electron/webpack/bootstrap","webpack://rpgjs-electron/webpack/runtime/compat get default export","webpack://rpgjs-electron/webpack/runtime/define property getters","webpack://rpgjs-electron/webpack/runtime/hasOwnProperty shorthand","webpack://rpgjs-electron/webpack/runtime/make namespace object","webpack://rpgjs-electron/./src/background.js"],"sourcesContent":["module.exports = require(\"electron\");","module.exports = require(\"terminate\");","module.exports = require(\"url\");","module.exports = require(\"child_process\");","module.exports = require(\"os\");","module.exports = require(\"path\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import path from \"path\";\r\nimport url from \"url\";\r\nimport os from \"os\";\r\nimport terminate from \"terminate\";\r\n\r\nimport {\r\n    app,\r\n    BrowserWindow,\r\n    Menu,\r\n    Tray,\r\n    dialog,\r\n    ipcMain,\r\n    Notification,\r\n    shell,\r\n} from \"electron\";\r\n\r\nconst { spawn } = require('child_process');\r\n\r\nlet mainWindow;\r\nlet tray = null;\r\nlet serverProcess;\r\n\r\nconst launchServer = new Promise(async (resolve, reject) => {\r\n    try {\r\n        serverProcess = await spawn('npm', ['run', 'rpg'], { shell: true });\r\n    } catch (error) {\r\n        console.log({error})\r\n        reject(error);\r\n        return;\r\n    }\r\n\r\n    if (!serverProcess || !serverProcess.pid) {\r\n        reject('serverProcess is null');\r\n        return;\r\n    }\r\n\r\n    serverProcess.stdout.on('data', (data) => {\r\n        console.log(`stdout: ${data}`);\r\n        const _str = `${data}`;\r\n        if (_str.includes(\"localhost\")) {\r\n            console.log('serverProcess.pid: ', serverProcess.pid);\r\n            resolve(_str);\r\n            return;\r\n        }\r\n    });\r\n});\r\n\r\nfunction closeServerProcess(pid) {\r\n    return new Promise((resolve, reject) => {\r\n        if (!pid) {\r\n            return resolve();\r\n        }\r\n        terminate(pid, (err) => {\r\n            return resolve();\r\n        });\r\n    });\r\n}\r\n\r\n/*\r\n * Creating the primary window, only runs once.\r\n */\r\nconst createWindow = async (msg) => {\r\n    // webview resolution: 816x624\r\n    let width = 300;\r\n    let height = 150;\r\n    mainWindow = new BrowserWindow({\r\n        width: width,\r\n        height: height,\r\n        minWidth: width,\r\n        minHeight: height,\r\n        maxWidth: width,\r\n        maximizable: false,\r\n        maxHeight: height,\r\n        useContentSize: true,\r\n        autoHideMenuBar: true,\r\n        webPreferences: {\r\n            nodeIntegration: false,\r\n            contextIsolation: true,\r\n            enableRemoteModule: false,\r\n            sandbox: false,\r\n            //sandbox: true,\r\n            preload: path.join(__dirname, \"preload.js\"),\r\n            //\r\n            webgl: true,\r\n            disableHardwareAcceleration: false,\r\n            offscreen: false,\r\n            backgroundThrottling: false\r\n        },\r\n        icon: __dirname + \"/resources/icons/512x512.png\",\r\n    });\r\n\r\n    /*\r\n    // NOTE: This method uses as much as 100% CPU\r\n    const _url = `http://localhost:${port}/`;\r\n    try {\r\n        mainWindow.loadURL(_url);\r\n    } catch (error) {\r\n        console.log({error});\r\n    }\r\n    */\r\n\r\n    mainWindow.loadURL(url.format({\r\n        pathname: path.join(__dirname, \"index.html\"),\r\n        protocol: \"file:\",\r\n        slashes: true,\r\n    }));\r\n\r\n    app.on('window-all-closed', async () => {\r\n        if (process.platform !== 'darwin') {\r\n            console.log('window-all-closed');\r\n            await closeServerProcess(serverProcess.pid);\r\n            app.quit();\r\n        }\r\n    });\r\n\r\n    tray = new Tray(__dirname + \"/resources/icons/512x512.png\");\r\n    const contextMenu = Menu.buildFromTemplate([\r\n        {\r\n            label: \"Show App\",\r\n            click: function () {\r\n                mainWindow.show();\r\n            },\r\n        },\r\n        {\r\n            label: \"Quit\",\r\n            click: async function () {\r\n                app.isQuiting = true;\r\n                tray = null;\r\n                console.log('quit');\r\n                await closeServerProcess(serverProcess.pid);\r\n                app.quit();\r\n            },\r\n        },\r\n    ]);\r\n\r\n    tray.setToolTip(\"RPGJS client\");\r\n\r\n    tray.on(\"right-click\", (event, bounds) => {\r\n        tray.popUpContextMenu(contextMenu);\r\n    });\r\n\r\n    ipcMain.on(\"notify\", (event, arg) => {\r\n        const NOTIFICATION_TITLE = \"Beet wallet notification\";\r\n        const NOTIFICATION_BODY =\r\n            arg == \"request\" ? \"Beet has received a new request.\" : arg;\r\n\r\n        if (os.platform === \"win32\") {\r\n            app.setAppUserModelId(app.name);\r\n        }\r\n\r\n        function showNotification() {\r\n            new Notification({\r\n                title: NOTIFICATION_TITLE,\r\n                subtitle: \"subtitle\",\r\n                body: NOTIFICATION_BODY,\r\n                icon: __dirname + \"/img/beet-tray.png\",\r\n            }).show();\r\n        }\r\n\r\n        showNotification();\r\n    });\r\n\r\n    ipcMain.handle(\"port\", async (event, arg) => {\r\n        return msg;\r\n    });\r\n\r\n    tray.on(\"click\", () => {\r\n        mainWindow.setAlwaysOnTop(true);\r\n        mainWindow.show();\r\n        mainWindow.focus();\r\n        mainWindow.setAlwaysOnTop(false);\r\n    });\r\n\r\n    tray.on(\"balloon-click\", () => {\r\n        mainWindow.setAlwaysOnTop(true);\r\n        mainWindow.show();\r\n        mainWindow.focus();\r\n        mainWindow.setAlwaysOnTop(false);\r\n    });\r\n};\r\n\r\napp.disableHardwareAcceleration();\r\n\r\nlet currentOS = os.platform();\r\nif (currentOS === \"win32\" || currentOS === \"linux\") {\r\n    // windows + linux setup phase\r\n    const gotTheLock = app.requestSingleInstanceLock();\r\n\r\n    if (!gotTheLock) {\r\n        app.quit();\r\n    } else {\r\n        // Handle the protocol. In this case, we choose to show an Error Box.\r\n        app.on(\"second-instance\", (event, argv) => {\r\n            // Someone tried to run a second instance, we should focus our window.\r\n            if (!mainWindow) {\r\n                console.error(\"Main window is not defined.\");\r\n                return;\r\n            }\r\n\r\n            if (mainWindow.isMinimized()) {\r\n                mainWindow.restore();\r\n            }\r\n\r\n            mainWindow.focus();\r\n        });\r\n\r\n        app.whenReady()\r\n        .then(async () => {\r\n            let _server = await launchServer;\r\n            return _server;\r\n        })\r\n        .then((res) => {\r\n            createWindow(res);\r\n        })\r\n        .catch((error) => {\r\n            console.log({error});\r\n            app.quit();\r\n        });\r\n    }\r\n} else {\r\n    app.whenReady()\r\n    .then(async () => {\r\n        let _server = await launchServer;\r\n        return _server;\r\n    })\r\n    .then((res) => {\r\n        createWindow(res);\r\n    })\r\n    .catch((error) => {\r\n        console.log({error});\r\n        app.quit();\r\n    });\r\n\r\n    app.on(\"window-all-closed\", () => {\r\n        if (process.platform !== \"darwin\") {\r\n            app.quit();\r\n        }\r\n    });\r\n\r\n    /*\r\n    app.on(\"activate\", () => {\r\n        if (mainWindow === null) {\r\n            createWindow();\r\n        }\r\n    });\r\n    */\r\n}\r\n"],"names":[],"sourceRoot":""}